<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.springboot.jobkorea.domain.user.UserRepository">
  	<select id="checkUsernameByUsername" resultType="Integer" parameterType="String">
  		select
  			count(username)
  		from
  			user_mst
  		where
  			username = #{username};
  	</select>
  	<select id="checkCompUsernameByCompUsername" resultType="Integer" parameterType="String">
  		select
  			count(username)
  		from
  			comp_mst
  		where
  			username = #{username};
  	</select>
  	
  
  	<insert id="insertUser" parameterType="com.springboot.jobkorea.domain.user.User">
  		insert into
  			user_mst
  		values(
  			0,
  			#{name},
  			#{username},
  			#{oauth2_username},
  			#{password},
  			#{provider},
  			#{role},
  			#{email},
  			#{phone},
  			now(),
  			now()
  		);
  	</insert>
  	
  	<insert id="insertCompUser" parameterType="com.springboot.jobkorea.domain.user.Company">
  		insert into
  			comp_mst
  		values(
  			0,
  			#{comptype},
  			#{compnum},
  			#{compname},
  			#{ceoname},
  			#{username},
  			#{password},
  			#{role},
  			#{name},
  			#{phone},
  			#{email},
  			now(),
  			now()
  		);
  	
  	</insert>
  	
  	<select id="getUserByUsername" resultType="com.springboot.jobkorea.domain.user.User" parameterType="String">
  		select
			*
		from
			user_mst
		where
			username = #{username};
  	</select>
  	
  	<select id="getUserByOAuth2Username" resultType="com.springboot.jobkorea.domain.user.User" parameterType="String">
  		select
			*
		from
			user_mst
		where
			oauth2_username = #{oauth2_username};
  	</select>
  	
  	
  	<select id="getCompanyByUsername" resultType="com.springboot.jobkorea.domain.user.Company" parameterType="String">
  		select
  			*
  		from
  			comp_mst
  		where
  			username = #{username};
  	</select>
  	<select id="getUserByUserId" resultType="com.springboot.jobkorea.domain.user.User" parameterType="Integer">
  		
  		select
  			*
  		from
  			user_mst
  		where
  			id = #{id};
  	</select>
  	<update id="updateUserById" parameterType="com.springboot.jobkorea.domain.user.User">
  		update
  			user_mst
  		set
  			username = #{username},
  			name = #{name},
  			phone = #{phone},
  			email = #{email},
  			update_date = now()
  		where
  			id = #{id}; 
  	</update>
  	 <update id="updateUserDtlById" parameterType="com.springboot.jobkorea.domain.resume.Resume">
  		update
  			user_dtl
  		set
  			profile_img = #{profile_img}
  		where
  			id = #{id}; 
  	</update>
  	<update id="updatePasswordById" parameterType="com.springboot.jobkorea.domain.user.User">
		update
			user_mst
		set
			password = #{password},
			
			update_date = now()
		where
			id = #{id};
	</update>
  	
  	<update id="updateCompanyById" parameterType="com.springboot.jobkorea.domain.user.Company">
  		update
  			company_mst
  		set
  			comptype = #{comptype},
  			ceoname = #{ceoname},
  			
  			update_date = now()
  		where
  			id = #{id}; 
  	</update>
  	
  	<!--  -->
  	<!-- 아이디 찾기 -->
  	<select id="findPersonalIdByNameAndEmail" resultType="Integer" parameterType="String">
  		SELECT
			count(username)
		FROM
			user_mst
		WHERE
			name = #{name} AND
			email = #{email};
  	</select>
  	
  	<select id="findCompanyIdByNameAndEmail" resultType="Integer" parameterType="String">
  		SELECT
			count(username)
		FROM
			comp_mst
		WHERE
			name = #{name} AND
			email = #{email};
  	</select>

  	<select id="getPersonalIdByNameAndEmail" resultType="String" parameterType="String">
  		SELECT
			username
		FROM
			comp_mst
		WHERE
			name = #{name} AND
			email = #{email};
  	</select>

  	<select id="getCompanyIdByNameAndEmail" resultType="String" parameterType="String">
  		SELECT
			username
		FROM
			comp_mst
		WHERE
			name = #{name} AND
			email = #{email};
  	</select>
  	
  	
  	<!-- 비밀번호 찾기 -->
  	<select id="findPersonalPwByNameAndUsername" resultType="Integer" parameterType="String">
  		SELECT
			count(username)
		FROM
			user_mst
		WHERE
			name = #{name} AND
			username = #{username};
  	</select>

  	<update id="replacePersonalPwByUsername"  parameterType="String" >
  		update
  			user_mst
  		set
  			password = "12345",
  			
  			update_date = now()
  		where
  			username = #{username}; 
  	</update>

  	<select id="findCompanyPwByNameAndUsername" resultType="Integer" parameterType="String">
  		SELECT
			count(username)
		FROM
			comp_mst
		WHERE
			name = #{name} AND
			username = #{username};
  	</select>

  	<update id="replaceCompanyPwByUsername"  parameterType="String" >
  		update
  			comp_mst
  		set
  			password = "12345",
  			
  			update_date = now()
  		where
  			username = #{username}; 
  	</update>
  	
  	
  	
  </mapper>